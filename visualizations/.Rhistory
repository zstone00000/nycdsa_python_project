# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.date(select(inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.date(select(.,inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.datetime(select(.,inspection.date))
?date
?DateTimeClasses
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(.,inspection.date)
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.Date(select(.,inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date)
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date) %>%
as.Date()
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date) %>%
as.date()
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date) %>%
as.Dates()
?Dates
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.Dates(select(inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
as.Dates(select(.,inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
Dates(select(.,inspection.date))
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date)
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date) %>%
as.Date(format = '%m/%d/%y')
# 2. Convert the inspection.date column from character to date format.
clean_df %>%
select(inspection.date) %>%
as.Date(format = '%m/%d/%y')
# 2. Convert the inspection.date column from character to date format.
clean_df['inspection.date']
# 2. Convert the inspection.date column from character to date format.
as.Date(clean_df['inspection.date'],format = '%m/%d/%y')
# 2. Convert the inspection.date column from character to date format.
as.Date(clean_df['inspection.date'],format = '%m/%d/%y')
# 2. Convert the inspection.date column from character to date format.
as.Date(clean_df$inspection.date,format = '%m/%d/%y')
clean_df %>%
select(inspection.date) %>%
as.Date(format = '%m/%d/%y')
# 2. Convert the inspection.date column from character to date format.
clean_df$inspection.date  = as.Date(clean_df$inspection.date,format = '%m/%d/%y')
# 3. Extract the month from the inspection.date column.
clean_df$inspection.date
# 3. Extract the month from the inspection.date column.
month(clean_df$inspection.date)
# 3. Extract the month from the inspection.date column.
clean_df$inspection.date
# 3. Extract the month from the inspection.date column.
month(clean_df$inspection.date)
# 3. Extract the month from the inspection.date column.
sapply(clean_df$inspection.date, month)
# 3. Extract the month from the inspection.date column.
sapply(month,clean_df$inspection.date)
# 3. Extract the month from the inspection.date column.
sapply(clean_df$inspection.date, month)
# 3. Extract the month from the inspection.date column.
clean_df$inspection.date
# 3. Extract the month from the inspection.date column.
format(clean_df$inspection.date, '%m')
clean_df %>%
mutate(month = format(inspection.date,'%m'))
clean_df %>%
mutate(month = as.numeric(format(inspection.date,'%m')))
clean_df %>%
mutate(month = as.numeric(format(inspection.date,'%m')))
clean_df = clean_df %>%
mutate(month = as.numeric(format(inspection.date,'%m')))
str(clean_df)
clean_df %>%
select(grade)
clean_df %>%
filter(isna(grade))
clean_df %>%
filter(isNA(grade))
clean_df %>%
filter(is.na(grade))
clean_df[is.na(clean_df$grade)]
is.na(clean_df$grade)
clean_df$grade
if_else(condition = clean_df$grade == "", true = NA, false = clean_df$grade)
if_else(condition = clean_df$grade == "", true = NA, false = clean_df$grade)
if_else(condition = clean_df$grade == "", true = NA, false = 'x')
if_else(condition = clean_df$grade == "", true = 'y', false = 'x')
if_else(condition = clean_df$grade == "", true = 'y', false = clean_df$grade)
if_else(condition = clean_df$grade == "", true = NA, false = clean_df$grade)
if_else(condition = clean_df$grade == "", true = "", false = clean_df$grade)
if_else(condition = clean_df$grade == "", true = "X", false = clean_df$grade)
switch(A = 0:14, B = 14:28)
switch(c(1,2,10,22), A = 0:14, B = 14:28)
switch(c(1,2,10,22), A = 0:14, B = 14:28)
switch(EXPR = A, A = 0:14, B = 14:28)
switch(EXPR = A, 'A' = 0:14, 'B' = 14:28)
switch(EXPR = 'A', 'A' = 0:14, 'B' = 14:28)
switch(EXPR = 12, 'A' = 0:14, 'B' = 14:28)
switch(EXPR = 12, 'A' = 0:14, 'B' = 14:28)
if_else(clean_df$score < 14, true = 'A')
if_else(clean_df$score < 14, true = 'A', false = 'XXX')
if_else(clean_df$score < 14, true = 'A',
false = if_else(clean_df$score < 28, true = 'B', false = 'XXX')
)
cut(15, breaks = c(0,14,28, Inf))
cut(15, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
if_else(condition = clean_df$grade == "",
true = cut(clean_df$grade, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = clean_df$grade)
cut(clean_df$grade, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
mapply(cut, clean_df$grade, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
cut(clean_df$grade, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
cut(15, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
cut(clean_df$grade, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = clean_df$grade)
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade
factor(clean_df$grade)
factor(clean_df$grade)[1]
factor(clean_df$grade)[2]
class(factor(clean_df$grade)[2])
levels(factor(clean_df$grade))
if_else(condition = clean_df$grade == "",
true = factor(cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C'))),
false = factor(clean_df$grade))
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade
factor(clean_df$grade)
clean_df$grade = factor(clean_df$grade)
clean_df$grade
clean_df$grade = ""
clean_df$grade == ""
clean_df$grade == "A"
levels(clean_df$grade)
levels(clean_df$grade)
View(raw_df)
clean_df = raw_df
clean_df
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
names(clean_df)  = names(clean_df) %>%
str_to_lower() %>%
str_replace_all(.,'cuisine.description','cuisine')
# 2. Convert the inspection.date column from character to date format.
clean_df$inspection.date  = as.Date(clean_df$inspection.date,format = '%m/%d/%y')
clean_df = clean_df %>%
mutate(month = as.numeric(format(inspection.date,'%m')))
clean_df$grade
levels(factor(clean_df$grade))
factor(clean_df$grade)
factor(clean_df$grade) == 'Z'
factor(clean_df$grade) == 'A'
factor(clean_df$grade) == 'P'
factor(clean_df$grade) == ''
clean_df$grade=factor(clean_df$grade)
levels(clean_df$grade)
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
class(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C', 'X')),
false = factor(clean_df$grade)))
false = clean_df$grade)
false = clean_df$grade)
false = factor(clean_df$grade))
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
names(clean_df)  = names(clean_df) %>%
str_to_lower() %>%
str_replace_all(.,'cuisine.description','cuisine')
# 2. Convert the inspection.date column from character to date format.
clean_df$inspection.date  = as.Date(clean_df$inspection.date,format = '%m/%d/%y')
clean_df = clean_df %>%
mutate(month = as.numeric(format(inspection.date,'%m')))
clean_df$grade=factor(clean_df$grade)
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
clean_df
clean_df
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
clean_df
str(clean_df)
clean_df$grade
levels(if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade)))
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade
if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade = if_else(condition = clean_df$grade == "",
true = cut(clean_df$score, breaks = c(0,14,28, Inf), labels = c('A', 'B', 'C')),
false = factor(clean_df$grade))
clean_df$grade
clean_df
clean_df$action
unique(clean_df$action)
clean_df$action %>%
str_replace_all('Violations were cited in the following area(s).', 'violations')
clean_df$action %>%
str_replace_all(.,'Violations were cited in the following area(s).', 'violations')
clean_df$action %>%
str_replace_all(string = ., pattern = 'Violations were cited in the following area(s).', replacement = 'violations')
clean_df$action %>%
str_replace_all(string = ., pattern = 'Violations+', replacement = 'violations')
clean_df$action %>%
gsub(replacement = 'violations', x = ., pattern = 'violations+')
clean_df$action %>%
gsub(replacement = 'XXX', x = ., pattern = 'violations+')
clean_df$action %>%
gsub x = ., pattern = 'violations+', replacement = 'XXX')
clean_df$action %>%
gsub() x = ., pattern = 'violations+', replacement = 'XXX')
clean_df$action %>%
gsub( x = ., pattern = 'violations+', replacement = 'XXX')
clean_df$action %>%
gsub( x = ., pattern = 'Violations', replacement = 'XXX')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area(s).', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations ', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following areas(s)', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following areas\(s\)', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following areas\(', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following areas\\(', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following areas', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area\\(', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area\\(x', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area\\(s', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area\\(s\\)', replacement = 'violations')
clean_df$action %>%
gsub( x = ., pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations')
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations')
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations') %>%
gsub(pattern = 'Establishment re-closed by DOHMH', replacement = 'reclosed')
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations') %>%
gsub(pattern = 'Establishment re-closed by DOHMH\\.', replacement = 'reclosed')
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations') %>%
gsub(pattern = 'Establishment re-closed by DOHMH\\.', replacement = 'XXX')
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations') %>%
gsub(pattern = 'Establishment ', replacement = 'XXX')
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area\\(s\\).', replacement = 'violations') %>%
gsub(pattern = 'Establishment ', replacement = 'XXX')
clean_df$action
clean_df$action %>%
starts_with('Violations')
clean_df$action %>%
starts_with(match = 'Violations')
clean_df$action %>%
filter(starts_with(match = 'Violations'))
clean_df$action
unique(clean_df$action)
startsWith(lean_df$action, 'Violations')
startsWith(clean_df$action, 'Violations')
clean_df %>%
filter(startsWith(action, 'Violations'))
clean_df %>%
filter(startsWith(action, 'Violations'))
clean_df %>%
filter(startsWith(.$action, 'Violations'))
filter(startsWith(clean_df$action, 'Violations'))
filter(clean_df,startsWith(clean_df$action, 'Violations'))
startsWith(clean_df$action, 'Violations')
filter(clean_df,startsWith(clean_df$action, 'Violations'))
class(filter(clean_df,startsWith(clean_df$action, 'Violations')))
filter(clean_df,startsWith(clean_df$action, 'Violations'))
clean_df[startsWith(clean_df$action, 'Violations')]
clean_df[startsWith(clean_df$action, 'Violations'),:]
clean_df[startsWith(clean_df$action, 'Violations'),]
clean_df[,startsWith(clean_df$action, 'Violations')]
clean_df$action
clean_df$action %>%
gsub(pattern = 'Violations', x = ., replacement = 'violations')
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', x = ., replacement = 'violations', fixed = TRUE)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE)
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE)
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-opened by DOHMH.', replacement = 'reopened', fixed = TRUE)
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-opened by DOHMH.', replacement = 'reopened', fixed = TRUE) %>%
gsub(pattern = 'No violations were recorded at the time of this inspection.', replacement = 'no violations', fixed = TRUE)
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-opened by DOHMH.', replacement = 'reopened', fixed = TRUE) %>%
gsub(pattern = 'No violations were recorded at the time of this inspection.', replacement = 'no violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-closed by DOHMH.', replacement = 'reclosed', fixed = TRUE)
unique(clean_df$action)
clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-opened by DOHMH.', replacement = 'reopened', fixed = TRUE) %>%
gsub(pattern = 'No violations were recorded at the time of this inspection.', replacement = 'no violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-closed by DOHMH.', replacement = 'reclosed', fixed = TRUE)
# 5. Rename the description from the action column to something short so it won't blow up your graph.
clean_df$action = clean_df$action %>%
gsub(pattern = 'Violations were cited in the following area(s).', replacement = 'violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment Closed by DOHMH. Violations were cited in the following area(s) and those requiring immediate action were addressed.', replacement = 'closed', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-opened by DOHMH.', replacement = 'reopened', fixed = TRUE) %>%
gsub(pattern = 'No violations were recorded at the time of this inspection.', replacement = 'no violations', fixed = TRUE) %>%
gsub(pattern = 'Establishment re-closed by DOHMH.', replacement = 'reclosed', fixed = TRUE)
clean_df
str(clean_df)
clean_df
clean_df %>%
filter(boro == "")
clean_df %>%
select(boro)
clean_df %>%
select(boro) %>%
table()
clean_df %>%
select(boro == 0)
clean_df %>%
select(boro == "0")
clean_df %>%
select(boro == )
clean_df %>%
select(boro == )
clean_df %>%
select(boro == 0)
clean_df %>%
filter(boro == 0)
clean_df %>%
filter(boro != 0)
clean_df %>%
filter(boro != 0) %>%
select(boro) %>%
unique()
clean_df %>%
filter(boro != 0)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(score) %>%
unique()
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(score) %>%
unique() %>%
arrange()
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(score) %>%
unique() %>%
arrange(score)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(score)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date) %>%
arrange(inspection.date
)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date) %>%
arrange(inspection.date)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date) %>%
arrange(desc(inspection.date))
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date) %>%
unique()
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date) %>%
unique() %>%
arrange(inspection.date)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0) %>%
select(inspection.date)
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
# 6. We want to filter out missing values to make our lives easier for further analysis.
clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
# 6. We want to filter out missing values to make our lives easier for further analysis.
clean_df = clean_df %>%
filter(boro != 0) %>%
filter(score >= 0)
clean_df
clean_df %>%
select(boro) %>%
unique()
clean_df %>%
select(score) %>%
unique()
clean_df %>%
select(score) %>%
unique() %>%
arrange(score)
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
raw.df %>%
select(camis, boro, cuisine, inspection.date, action, score, grade, month)
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
raw.df %>%
select(camis, boro, cuisine, inspection.date, action, score, grade, month)
names(raw.df)
names(raw_df)
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
raw.df %>%
str_to_lower(names(.))
